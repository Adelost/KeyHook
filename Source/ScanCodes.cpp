#include "ScanCodes.h"

namespace kh {

std::string scanCodeToStr(ScanCode code) {
    int rawCode = (int)code;
    switch (code) {
        case ScanCode::Esc: return "Esc";
        case ScanCode::Num1: return "Num1";
        case ScanCode::Num2: return "Num2";
        case ScanCode::Num3: return "Num3";
        case ScanCode::Num4: return "Num4";
        case ScanCode::Num5: return "Num5";
        case ScanCode::Num6: return "Num6";
        case ScanCode::Num7: return "Num7";
        case ScanCode::Num8: return "Num8";
        case ScanCode::Num9: return "Num9";
        case ScanCode::Num0: return "Num0";
        case ScanCode::Minus: return "Minus";
        case ScanCode::Plus: return "Plus";
        case ScanCode::Backspace: return "Backspace";
        case ScanCode::Tab: return "Tab";
        case ScanCode::Q: return "Q";
        case ScanCode::W: return "W";
        case ScanCode::E: return "E";
        case ScanCode::R: return "R";
        case ScanCode::T: return "T";
        case ScanCode::Y: return "Y";
        case ScanCode::U: return "U";
        case ScanCode::I: return "I";
        case ScanCode::O: return "O";
        case ScanCode::P: return "P";
        case ScanCode::BracketLeft: return "BracketLeft";
        case ScanCode::BracketRight: return "BracketRight";
        case ScanCode::Return: return "Return";
        case ScanCode::LCtrl: return "LCtrl";
        case ScanCode::A: return "A";
        case ScanCode::S: return "S";
        case ScanCode::D: return "D";
        case ScanCode::F: return "F";
        case ScanCode::G: return "G";
        case ScanCode::H: return "H";
        case ScanCode::J: return "J";
        case ScanCode::K: return "K";
        case ScanCode::L: return "L";
        case ScanCode::Semicolon: return "Semicolon";
        case ScanCode::Quote: return "Quote";
        case ScanCode::LShift: return "LShift";
        case ScanCode::Backslash: return "Backslash";
        case ScanCode::Z: return "Z";
        case ScanCode::X: return "X";
        case ScanCode::C: return "C";
        case ScanCode::V: return "V";
        case ScanCode::B: return "B";
        case ScanCode::N: return "N";
        case ScanCode::M: return "M";
        case ScanCode::Colon: return "Colon";
        case ScanCode::Period: return "Period";
        case ScanCode::ForwardSlash: return "ForwardSlash";
        case ScanCode::RShift: return "RShift";
        case ScanCode::NumpadMultiply: return "NumpadMultiply";
        case ScanCode::LAlt: return "LAlt";
        case ScanCode::Space: return "Space";
        case ScanCode::CapsLock: return "CapsLock";
        case ScanCode::NumLock: return "NumLock";
        case ScanCode::ScrollLock: return "ScrollLock";
        case ScanCode::Numpad7: return "Numpad7";
        case ScanCode::Numpad8: return "Numpad8";
        case ScanCode::Numpad9: return "Numpad9";
        case ScanCode::NumpadMinus: return "NumpadMinus";
        case ScanCode::Numpad4: return "Numpad4";
        case ScanCode::Numpad5: return "Numpad5";
        case ScanCode::Numpad6: return "Numpad6";
        case ScanCode::NumpadPlus: return "NumpadPlus";
        case ScanCode::Numpad1: return "Numpad1";
        case ScanCode::Numpad2: return "Numpad2";
        case ScanCode::Numpad3: return "Numpad3";
        case ScanCode::Numpad0: return "Numpad0";
        case ScanCode::NumpadDecimalPoint: return "NumpadDecimalPoint";
        case ScanCode::NumpadEnter: return "Enter";
        case ScanCode::RCtrl: return "RCtrl";
        case ScanCode::PrintScreen: return "PrintScreen";
        case ScanCode::NumpadDivide: return "NumpadDivide";
        case ScanCode::RAlt: return "RAlt";
        case ScanCode::Home: return "Home";
        case ScanCode::ArrowUp: return "ArrowUp";
        case ScanCode::PageUp: return "PageUp";
        case ScanCode::ArrowLeft: return "ArrowLeft";
        case ScanCode::ArrowRight: return "ArrowRight";
        case ScanCode::End: return "End";
        case ScanCode::ArrowDown: return "ArrowDown";
        case ScanCode::PageDown: return "PageDown";
        case ScanCode::Insert: return "Insert";
        case ScanCode::Delete: return "Delete";
        case ScanCode::LWin: return "LWin";
        case ScanCode::RWin: return "RWin";
        case ScanCode::Menu: return "Menu";
        case ScanCode::MouseLeft: return "MouseLeft";
        case ScanCode::MouseRight: return "MouseRight";
        case ScanCode::MouseMiddle: return "MouseMiddle";
        case ScanCode::MouseForward: return "MouseForward";
        case ScanCode::MouseBack: return "MouseBack";
        case ScanCode::MouseScrollDown: return "MouseScrollDown";
        case ScanCode::MouseScrollUp: return "MouseScrollUp";
        case ScanCode::MouseTiltLeft: return "MouseTiltLeft";
        case ScanCode::MouseTiltRight: return "MouseTiltRight";
        default: break;
    }
    return std::to_string(rawCode);
}
}